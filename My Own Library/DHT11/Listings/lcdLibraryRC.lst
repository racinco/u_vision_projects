C51 COMPILER V9.60.0.0   LCDLIBRARYRC                                                      01/27/2022 01:22:15 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LCDLIBRARYRC
OBJECT MODULE PLACED IN .\Objects\lcdLibraryRC.obj
COMPILER INVOKED BY: D:\Extension Apps\C51\BIN\C51.EXE lcdLibraryRC.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(
                    -.\Listings\lcdLibraryRC.lst) TABS(2) OBJECT(.\Objects\lcdLibraryRC.obj)

line level    source

   1          #include<reg51.h>
   2          #include<delay8051.h>
   3          #include<lcdLibraryRC.h>
   4          /* This code is for 4bit operation of the LCD
   5          
   6            *lcd_cmd function is used to call on differnt instructions according to the datasheets
   7            * 
   8            ADD Functions: 
   9            1. Read busy flag function
  10            2. Add the custom character generation function
  11          */
  12          
  13          
  14          sbit RS = P1^0;
  15          sbit RW = P1^1; 
  16          sbit E = P1^2; 
  17          
  18          sbit D4 = P2^4;
  19          sbit D5 = P2^5;
  20          sbit D6 = P2^6;
  21          sbit D7 = P2^7;
  22          
  23          void init_4bit(){
  24   1         RS = 0; RW =0;   E = 0; D6 = 0; D7 = 0;
  25   1                      delay_ms(1);
  26   1                      D5 = 1;
  27   1                      D4 = 1;
  28   1                      E = 1;
  29   1                      delay_ms(1);
  30   1                      E = 0;
  31   1                      delay_ms(1);
  32   1      
  33   1                      D5 = 1;
  34   1                      D4 = 1;
  35   1                      E = 1;
  36   1                      delay_ms(1);
  37   1                      E = 0;
  38   1                      delay_ms(1);
  39   1      
  40   1                      D5 = 1;
  41   1                      D4 = 1;
  42   1                      E = 1;
  43   1                      delay_ms(1);
  44   1                      E = 0;
  45   1                      delay_ms(1);
  46   1      
  47   1                      D5 = 1;
  48   1                      D4 = 0;
  49   1                      E = 1;
  50   1                      delay_ms(1);
  51   1                      E = 0;
  52   1                      delay_ms(1);
  53   1      }
  54          
C51 COMPILER V9.60.0.0   LCDLIBRARYRC                                                      01/27/2022 01:22:15 PAGE 2   

  55          void lcd_cmd (unsigned char cmd_hex){
  56   1        RS = 0; 
  57   1        RW = 0; 
  58   1        delay_ms(1);
  59   1        // First 4 bits
  60   1        if(cmd_hex & 0x80) D7 = 1 ; else D7 = 0; 
  61   1        if(cmd_hex & 0x40) D6 = 1 ; else D6 = 0; 
  62   1        if(cmd_hex & 0x20) D5 = 1 ; else D5 = 0; 
  63   1        if(cmd_hex & 0x10) D4 = 1 ; else D4 = 0; 
  64   1        
  65   1        E = 1; 
  66   1        delay_ms(1);
  67   1        E = 0 ; 
  68   1        delay_ms(1);
  69   1        
  70   1        // Last 4 bits
  71   1        if(cmd_hex & 0x08) D7 = 1 ; else D7 = 0; 
  72   1        if(cmd_hex & 0x04) D6 = 1 ; else D6 = 0; 
  73   1        if(cmd_hex & 0x02) D5 = 1 ; else D5 = 0; 
  74   1        if(cmd_hex & 0x01) D4 = 1 ; else D4 = 0;  
  75   1        
  76   1        E = 1; 
  77   1        delay_ms(1);
  78   1        E = 0 ; 
  79   1        delay_ms(1);
  80   1      }
  81          
  82          void display(){
  83   1        lcd_cmd(0x0C); 
  84   1      }
  85          
  86          void write_letter(){
  87   1        RS = 1 ; 
  88   1        RW = 0 ; 
  89   1        
  90   1        delay_ms(1); 
  91   1        
  92   1        // instruction set
  93   1        D7 = 0; 
  94   1        D6 = 1; 
  95   1        D5 = 0; 
  96   1        D4 = 0; 
  97   1        
  98   1        E = 1; 
  99   1        delay_ms(1); 
 100   1        E = 0 ; 
 101   1        delay_ms(1);
 102   1        
 103   1          // instruction set
 104   1        D7 = 1; 
 105   1        D6 = 0; 
 106   1        D5 = 0; 
 107   1        D4 = 0; 
 108   1        
 109   1        E = 1; 
 110   1        delay_ms(1); 
 111   1        E = 0 ; 
 112   1        delay_ms(1);
 113   1      }
 114          
 115          void write_oneLetter(unsigned char letter_hex){
 116   1        RS = 1; 
C51 COMPILER V9.60.0.0   LCDLIBRARYRC                                                      01/27/2022 01:22:15 PAGE 3   

 117   1        RW = 0; 
 118   1        delay_ms(1);
 119   1        // First 4 bits
 120   1        if(letter_hex & 0x80) D7 = 1 ; else D7 = 0; 
 121   1        if(letter_hex & 0x40) D6 = 1 ; else D6 = 0; 
 122   1        if(letter_hex& 0x20) D5 = 1 ; else D5 = 0; 
 123   1        if(letter_hex & 0x10) D4 = 1 ; else D4 = 0; 
 124   1        
 125   1        E = 1; 
 126   1        delay_ms(1);
 127   1        E = 0 ; 
 128   1        delay_ms(1);
 129   1        
 130   1        // Last 4 bits
 131   1        if(letter_hex & 0x08) D7 = 1 ; else D7 = 0; 
 132   1        if(letter_hex & 0x04) D6 = 1 ; else D6 = 0; 
 133   1        if(letter_hex & 0x02) D5 = 1 ; else D5 = 0; 
 134   1        if(letter_hex& 0x01) D4 = 1 ; else D4 = 0;  
 135   1        
 136   1        E = 1; 
 137   1        delay_ms(1);
 138   1        E = 0 ; 
 139   1        delay_ms(1);
 140   1      }
 141          
 142          
 143          void write_word(unsigned char *word){
 144   1        while(*word != 0){
 145   2          write_oneLetter(*word);
 146   2          word++ ; 
 147   2        }
 148   1        
 149   1      }
 150          
 151          void shift (int mode ) {
 152   1        switch (mode){  
 153   2          case 0: // shift all display right 
 154   2            lcd_cmd (0x1C); 
 155   2          break; 
 156   2          case 1: // shift all display left 
 157   2            lcd_cmd(0x18);
 158   2          case 2: // shift cursor right 
 159   2            lcd_cmd (0x14); 
 160   2          case 3: // shift cursor left
 161   2            lcd_cmd (0x10); 
 162   2        }
 163   1      }
 164          
 165          void backspace(){
 166   1        shift(3); 
 167   1        write_oneLetter(0x08); 
 168   1        shift(3); 
 169   1      }
 170          void space(){
 171   1        write_oneLetter(0x20); 
 172   1      }
 173          
 174          void clear_display() { lcd_cmd(0x01); }
 175          void return_home(){ lcd_cmd(0x02);}
 176          
 177          
 178          
C51 COMPILER V9.60.0.0   LCDLIBRARYRC                                                      01/27/2022 01:22:15 PAGE 4   

 179          
 180          
 181          
 182          
 183          
 184          
 185          
 186          
 187          
 188          
 189          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    649    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
