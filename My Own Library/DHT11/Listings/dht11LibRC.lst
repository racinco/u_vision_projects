C51 COMPILER V9.60.0.0   DHT11LIBRC                                                        01/27/2022 02:06:15 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE DHT11LIBRC
OBJECT MODULE PLACED IN .\Objects\dht11LibRC.obj
COMPILER INVOKED BY: D:\Extension Apps\C51\BIN\C51.EXE dht11LibRC.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\dht11LibRC.lst) TABS(2) OBJECT(.\Objects\dht11LibRC.obj)

line level    source

   1          
   2          #include <dht11LibRC.h>
   3          #include <lcdLibraryRC.h>
   4          #include <stdio.h>
   5          
   6          sbit dataBus = P2^0; 
   7          // starts the communication process
   8          
   9          sbit LED = P1^0;
  10          void request () {
  11   1      /*
  12   1        1. hosts pulls low for min 18ms
  13   1        2. hosts pulls up for 20-40 us 
  14   1        3. Sensor pulls low for 80 us 
  15   1        4. Sensor pulls up for 80 us 
  16   1        */
  17   1        dataBus = 0 ; 
  18   1        delay_ms(20); 
  19   1        dataBus = 1; 
  20   1      
  21   1      }
  22          void response (){
  23   1        while (dataBus == 1); 
  24   1        while (dataBus == 0); 
  25   1        while (dataBus == 1);
  26   1      }
  27          
  28          void dataSend ()
  29          {
  30   1      /*
  31   1        1. DHT 11 sends data by frist pulling the databus LOW for 50 us 
  32   1        2. Then pulls up HIGH 
  33   1        3. The lenght of the HIGH Signal determines if it is "1" or "0"
  34   1        4. 1: 70us | 0: 26-28us 
  35   1        5. THEN pulls low again for next transmission 
  36   1      */ 
  37   1        signed char bits [40] ; 
  38   1        unsigned int bytes [5]; 
  39   1        int counter , val , power ; 
  40   1        unsigned char converted_hum [5], converted_temp[5] ; 
  41   1        counter = val = power = 0 ; 
  42   1        
  43   1        bytes[0] = bytes[1] = bytes[2] = bytes[3] = bytes[4]  = 0 ;
  44   1        
  45   1        for (counter = 0 ; counter < 40 ; counter++){
  46   2          while (dataBus == 0); // waits the transmit siganl from the sensor 
  47   2          delay_us(); 
  48   2          if (dataBus == 1) {
  49   3            bits [counter] = 1 ; 
  50   3          }else {
  51   3            bits [counter] = 0; 
  52   3          }
  53   2        }
  54   1        
C51 COMPILER V9.60.0.0   DHT11LIBRC                                                        01/27/2022 02:06:15 PAGE 2   

  55   1        // convert the bits to different parts of the dta
  56   1        for ( counter = 0 ; counter < 40 ; counter++  ){
  57   2           bytes [counter/8] <<= 1; 
  58   2           bytes[counter/8] = bytes[counter/8] | bits[counter];
  59   2        }
  60   1        
  61   1        // convert hexadecimal to string
  62   1        
  63   1        if ( (bytes[0] + bytes[1] + bytes[2] + bytes[3]) == bytes[4] ){
  64   2          sprintf(converted_hum,"%d.%d", bytes[0], bytes[1]);
  65   2          write_word(converted_hum); 
  66   2          sprintf(converted_temp,"%d.%d", bytes[2],bytes[3]); 
  67   2          write_word(converted_temp); 
  68   2        }else {
  69   2          write_word("error");
  70   2        }
  71   1        
  72   1        
  73   1      }
  74          
  75          void receive_data()
  76          {  
  77   1        int i,c=0;
  78   1        for(i=0;i<8;i++)
  79   1        {
  80   2          while(dataBus==0);
  81   2        //  delay_us(30);
  82   2          
  83   2            if(dataBus==1){
  84   3              c=(c<<1)|(0x01);}
  85   2            else{
  86   3              c=c<<1;}
  87   2            
  88   2          while(dataBus==1);
  89   2        }
  90   1        
  91   1        write_oneLetter(c); 
  92   1      }
  93          
  94          
  95          
  96          
  97          
  98          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    368    ----
   CONSTANT SIZE    =     12    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      66
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
